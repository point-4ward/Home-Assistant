########################################################################################
#  Testing the mf_social sensors for darkness and bad weather.                         #
#                                                                                      #
#    **********************************************************************            #
# You must have the sun: component, the time sensor and the darksky weather sensor     #
# configured on your homeassistant installation before using this.                     #
#    **********************************************************************            #
#                                                                                      #
#                                                                                      #
#                                                                                      #
#  If you do not currently use packages, create a directory in your                    #
#  ./homeassistant/ directory called packages and place the following line under       #
#  your 'homeassistant:' entry in your configuration.yaml:                             #
#                                                                                      #
#  packages: !include_dir_named packages/                                              #
#                                                                                      #
#  For example:                                                                        #
#                                                                                      #
#  homeassistant:                                                                      #
#    name: Home                                                                        #
#    latitude: !secret latitude                                                        #
#    longitude: !secret longitude                                                      #
#    elevation: !secret elevation                                                      #
#    time_zone: !secret time_zone                                                      #
#    unit_system: metric                                                               #
#    customize: !include customize.yaml                                                #
#    packages: !include_dir_named packages/                                            #
#                                                                                      #
#  (I presume if you already use packages you will know how to integrate               #
#     this file in to your configuration)                                              #
#                                                                                      #
#  Then create a new file and copy this in to it, save it in your packages             #
#  folder and call it mf_social_test.yaml                                              #
#                                                                                      #
#  Edit the 'notify' option to your prefered notification media in all 6 places (near  #
#  the bottom of the file), save and restart homeassistant.                            #
#                                                                                      #
#  (If you use your own default_view you will need to put group.mf_social_test         #
#     on one of your views before you restart)                                         #
#                                                                                      #
#   Set the time on the mf_social_test card for when you want to receive the           #
#   bad weather notification (around when you're leaving for work in the morning       #
#   would be best), defaults to 7.30am.                                                #
#                                                                                      #
#   The two sensors will monitor your dark_sky and sun components and                  #
#   attempt to work out when it is dark enough to switch the lights on,                #
#   and light enough to switch them off.  It will also check whether                   #
#   your journey to work is likely to be slightly longer due to frost,                 #
#   snow or heavy rain.                                                                #
#                                                                                      #
#   You will receive notifications as follows:                                         #
#                                                                                      #
#   - everytime the light sensor thinks it is dark outside, and therefore              #
#     would switch the lights on if used as the trigger.                               #
#   - everytime the light sensor thinks it is light outside, and therefore             #
#     would switch the lights off if used as the trigger.                              #
#   - at the time you set reporting 'snow', 'frost', 'heavy_rain' or 'clear'           #
#                                                                                      #
#   Please update mf_social with how accurate it is for you and any false              #
#   positives, false negatives or completely wrong results!                            #
#                                                                                      #
#   Thanks!                                                                            #
#                                                                                      #
########################################################################################

homeassistant:
  customize:
    sensor.test_dark_outside:
      icon: mdi:theme-light-dark

    sensor.test_bad_weather:
      icon: mdi:weather-snowy-rainy

    sensor.test_notification_time:
      friendly_name: 'Notification Time'
      icon: mdi:alarm

    sensor.test_notification_time_long:
      hidden: true

    sensor.test_notification_hour:
      hidden: true

    sensor.test_notification_minute:
      hidden: true

    input_boolean.test_sunset_offset:
      hidden: true


input_boolean:
  test_sunset_offset:

  
input_number:
  test_notification_hour:
    name: Hour
    icon: mdi:timer
    initial: 7
    min: 0
    max: 23
    step: 1

  test_notification_minute:
    name: Minute
    icon: mdi:timer
    initial: 30
    min: 0
    max: 55
    step: 5


sensor:
  - platform: template
    sensors:  
      test_dark_outside:
        friendly_name: 'Dark outside'
        value_template: >
          {% if (states.input_boolean.test_sunset_offset.state == 'on') %}true
          {% elif (states.sun.sun.attributes.elevation | int < 3) %}true
          {% elif ( (states.sun.sun.attributes.elevation | int < 4.5) and (states.sensor.dark_sky_cloud_coverage.state | int > 80)) %}true
          {% elif ( (states.sun.sun.attributes.elevation | int < 6.5) and (states.sensor.dark_sky_cloud_coverage.state | int > 85)) %}true
          {% elif (states.sensor.dark_sky_cloud_coverage.state | int > 90) %}true
          {% else %}false
          {% endif %}

      test_bad_weather:
      friendly_name: 'Bad weather'
      value_template: >
        {% if (states.sensor.dark_sky_precip.state == "snow") %}snow
        {% elif ((states.sensor.dark_sky_daily_low_temperature.state | int < 4) and (states.sensor.dark_sky_dew_point.state | int < 6) and (states.sensor.dark_sky_wind_speed.state | int < 12) and (states.sensor.dark_sky_cloud_coverage.state | int < 20) and (states.sensor.dark_sky_humidity.state | int > 50)) %} frost
        {% elif (states.sensor.dark_sky_precip_intensity | int > 7) %} heavy_rain
        {% else %} clear
        {% endif %}

      test_notification_hour:
        value_template: '{{ states.input_number.test_notification_hour.state | int }}'
        
      test_notification_minute:
        value_template: '{{ states.input_number.test_notification_minute.state | int }}'
        
      test_notification_time:
        value_template: >-
          {{ states.sensor.test_notification_hour.state }}:
          {%- if states.sensor.test_notification_minute.state|length == 1 -%}
            0
          {%- endif -%}
            {{ states.sensor.test_notification_minute.state }}
            
      test_notification_time_long:
        value_template: >-
          {% if states.sensor.test_notification_hour.state|length == 1 -%}
            0
          {%- endif -%}
            {{ states.sensor.test_notification_hour.state }}:
          {%- if states.sensor.test_notification_minute.state|length == 1 -%}
            0
          {%- endif -%}
            {{ states.sensor.test_notification_minute.state }}


group:
  mf_social_test:
    name: mf_social test card
    control: hidden
    entities:
      - sensor.test_dark_outside
      - sensor.test_bad_weather
      - sensor.test_notification_time
      - input_number.test_notification_hour
      - input_number.test_notification_minute


automation:
  - alias: 'sun going down'
    initial_state: 'on'
    trigger:
      platform: sun
      event: sunset
      offset: '-00:35:00'
    action:
      service: input_boolean.turn_on
      entity_id: input_boolean.test_sunset_offset

  - alias: 'sun going up'
    initial_state: 'on'
    trigger:
      platform: sun
      event: sunrise
      offset: '+00:35:00'
    action:
      service: input_boolean.turn_off
      entity_id: input_boolean.test_sunset_offset

  - alias: 'Bad weather notification - clear'
    initial_state: 'on'
    trigger:
      platform: template
      value_template: '{{ states.sensor.time.state == states.sensor.test_notification_time_long.state }}'
    condition:
      condition: state
      entity_id: sensor.test_bad_weather
      state: 'clear'
    action:
      - service: notify.[YOUR PREFERENCE 1 OF 6]
        data:
          message: 'The bad weather sensor is registering clear.'

  - alias: 'Bad weather notification - frost'
    initial_state: 'on'
    trigger:
      platform: template
      value_template: '{{ states.sensor.time.state == states.sensor.test_notification_time_long.state }}'
    condition:
      condition: state
      entity_id: sensor.test_bad_weather
      state: 'frost'
    action:
      - service: notify.[YOUR PREFERENCE 2 OF 6]
        data:
          message: 'The bad weather sensor is registering frost.'

  - alias: 'Bad weather notification - heavy_rain'
    initial_state: 'on'
    trigger:
      platform: template
      value_template: '{{ states.sensor.time.state == states.sensor.test_notification_time_long.state }}'
    condition:
      condition: state
      entity_id: sensor.test_bad_weather
      state: 'heavy_rain'
    action:
      - service: notify.[YOUR PREFERENCE 3 OF 6]
        data:
          message: 'The bad weather sensor is registering heavy rain.'
          
  - alias: 'Bad weather notification - snow'
    initial_state: 'on'
    trigger:
      platform: template
      value_template: '{{ states.sensor.time.state == states.sensor.test_notification_time_long.state }}'
    condition:
      condition: state
      entity_id: sensor.test_bad_weather
      state: 'snow'
    action:
      - service: notify.[YOUR PREFERENCE 4 OF 6]
        data:
          message: 'The bad weather sensor is registering snow.'

  - alias: 'Light notification - dark'
    initial_state: 'on'
    trigger:
      platform: state
      entity_id: sensor.test_dark_outside
      to: 'true'
    action:
      - service: notify.[YOUR PREFERENCE 5 OF 6]
        data:
          message: 'The dark sensor has changed to true, I would have switched the lights on now if using this sensor.'

  - alias: 'Light notification - light'
    initial_state: 'on'
    trigger:
      platform: state
      entity_id: sensor.test_dark_outside
      to: 'false'
    action:
      - service: notify.[YOUR PREFERENCE 6 OF 6]
        data:
          message: 'The dark sensor has changed to false, I would have switched the lights off now if using this sensor.'
