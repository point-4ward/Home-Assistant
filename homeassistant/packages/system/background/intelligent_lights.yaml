############################################################
#                                                          #
# This package contains the automations that intelligently #
# control lighting based on weather/occupancy/time etc     #
#                                                          #
# DEPENDS ON: Occupancy and Environment                    #
#                                                          #
############################################################


switch:
  - platform: command_line
    switches:
      bathroom_motion_status:
        command_on: !secret bathtime_command_on
        command_off: !secret bathtime_command_off
        command_state: !secret bathtime_command_state
        value_template: "{{ value_json.config.on }}"

      kitchen_motion_status:
        command_on: !secret kitchen_command_on
        command_off: !secret kitchen_command_off
        command_state: !secret kitchen_command_state
        value_template: "{{ value_json.config.on }}"

  - platform: template
    switches:
      bathtime_mode:
        icon_template: mdi:hot-tub
        value_template: "{{ is_state('switch.bathroom_motion_status' , 'off') }}"
        turn_on:
          - service: homeassistant.turn_off
            entity_id: switch.bathroom_motion_status
          - service: homeassistant.turn_on
            entity_id: light.bathroom
            data:
              brightness_pct: 100
        turn_off:
          - service: homeassistant.turn_on
            entity_id: switch.bathroom_motion_status
          - service: homeassistant.turn_off
            entity_id: light.bathroom


input_select:
  bedroom_scenes:
    name: Scenes
    options:
      - Select
      - Arctic aurora
      - Bright
      - Concentrate
      - Dimmed
      - Energize
      - Nightlight
      - Read
      - Relax
      - Savanna sunset
      - Spring blossom
      - Tropical twilight
    initial: Select
    icon: mdi:creation


scene:
  - name: Livingroom dim
    entities:
      light.livingroom:
        state: on
        transition: 4
        brightness: 125

  - name: Livingroom movie
    entities:
      light.livingroom:
        state: on
        transition: 4
        brightness: 35

  - name: Livingroom bright
    entities:
      light.livingroom:
        state: on
        transition: 4
        brightness: 255

  - name: Livingroom sunset
    entities:
      light.livingroom:
        state: on
        transition: 600
        brightness: 255

  - name: Boys bright
    entities:
      light.boys:
        state: on
        transition: 4
        brightness: 200

  - name: Boys dim
    entities:
      light.boys:
        state: on
        transition: 4
        brightness: 125

  - name: Boys night
    entities:
      light.boys:
        state: on
        transition: 4
        brightness: 5

  - name: Girls bright
    entities:
      light.girls:
        state: on
        transition: 4
        brightness: 200

  - name: Girls dim
    entities:
      light.girls:
        state: on
        transition: 4
        brightness: 125

  - name: Girls night
    entities:
      light.girls:
        state: on
        transition: 4
        brightness: 5


automation:
  - alias: Lighting - off when daylight
    initial_state: on
    trigger:
      platform: state
      entity_id: input_boolean.dark
      to: 'off'
    condition:
      - condition: state
        entity_id: sensor.home_status
        state: 'Occupied'
      - condition: state
        entity_id: group.all_lights
        state: 'on'
    action:
      - service: script.notify
        data:
          call_light_inside: 1
      - service: homeassistant.turn_off
        entity_id: group.all_lights

  - alias: Lighting - on when dark (already home)
    initial_state: on
    trigger:
      platform: state
      entity_id: input_boolean.dark
      to: 'on'
    condition:
      condition: state
      entity_id: sensor.home_status
      state: 'Occupied'
    action:
      - service: script.notify
        data:
          call_dark_inside: 1
      - service: homeassistant.turn_on
        entity_id: scene.livingroom_sunset

  - alias: Lighting - on when dark (arriving home)
    initial_state: on
    trigger:
      platform: state
      entity_id: sensor.home_status
      to: 'Occupied'
    condition:
      condition: state
      entity_id: input_boolean.dark
      state: 'on'
    action:
      - service: homeassistant.turn_on
        entity_id: scene.livingroom_bright

  - alias: Lighting - Kodi
    initial_state: on
    trigger:
      - platform: state
        entity_id: media_player.kodi
        to: 'playing'
      - platform: state
        entity_id: media_player.kodi
        to: 'paused'
      - platform: state
        entity_id: media_player.kodi
        to: 'idle'
        from: 'playing'
    condition:
      - condition: state
        entity_id: input_boolean.dark
        state: 'on'
      - condition: or
        conditions:
          - condition: template
            value_template: "{{ is_state_attr('media_player.kodi' , 'media_content_type' , 'tvshow') }}"
          - condition: template
            value_template: "{{ is_state_attr('media_player.kodi' , 'media_content_type' , 'movie') }}"
          - condition: state
            entity_id: media_player.kodi
            state: 'idle'
    action:
      service: homeassistant.turn_on
      data_template:
        entity_id: >
          {% if is_state('media_player.kodi' , 'playing') %} scene.livingroom_movie
          {% else %} scene.livingroom_dim {% endif %}

  - alias: Lighting - Reset scene selector (Bedroom)
    initial_state: on
    trigger:
      platform: state
      entity_id: light.bedroom
      to: 'off'
    condition:
      condition: template
      value_template: "{{ not is_state('input_select.bedroom_scenes' , 'Select') }}"
    action:
      service: input_select.select_option
      data:
        entity_id: input_select.bedroom_scenes
        option: Select

  - alias: Lighting - Trigger scene (Bedroom)
    initial_state: on
    trigger:
      platform: state
      entity_id: input_select.bedroom_scenes
    condition:
      condition: template
      value_template: "{{ not is_state('input_select.bedroom_scenes' , 'Select') }}"
    action:
      service: script.set_hue_scene
      data_template:
        group: "Bedroom"
        scene: "{{ states('input_select.bedroom_scenes') }}"

  - alias: Lighting - Boys nightlight mode
    initial_state: on
    trigger:
      platform: state
      entity_id: sensor.boys_switch
      to: '4_hold'
    action:
      - service: homeassistant.turn_on
        entity_id: scene.boys_night
      - delay: 00:30:00
      - service: script.empty_boys

  - alias: Lighting - Girls nightlight mode
    initial_state: on
    trigger:
      platform: state
      entity_id: sensor.girls_switch
      to: '4_hold'
    action:
      - service: homeassistant.turn_on
        entity_id: scene.girls_night
      - delay: 00:30:00
      - service: script.empty_girls

  - alias: Lighting - Bedroom lights off
    initial_state: on
    trigger:
      platform: state
      entity_id: binary_sensor.bedroom_motion
      to: 'off'
      for:
        minutes: 10
    condition:
      - condition: state
        entity_id: light.bedroom
        state: 'on'
      - condition: state
        entity_id: input_boolean.dark
        state: 'off'
    action:
      service: homeassistant.turn_off
      entity_id: light.bedroom

  - alias: Lighting - Boys lights off
    initial_state: on
    trigger:
      platform: state
      entity_id: binary_sensor.boys_motion
      to: 'off'
      for:
        minutes: 10
    condition:
      - condition: state
        entity_id: light.boys
        state: 'on'
      - condition: state
        entity_id: input_boolean.dark
        state: 'off'
    action:
      service: homeassistant.turn_off
      entity_id: light.boys

  - alias: Lighting - Girls lights off
    initial_state: on
    trigger:
      platform: state
      entity_id: binary_sensor.girls_motion
      to: 'off'
      for:
        minutes: 10
    condition:
      - condition: state
        entity_id: light.girls
        state: 'on'
      - condition: state
        entity_id: input_boolean.dark
        state: 'off'
    action:
      service: homeassistant.turn_off
      entity_id: light.girls

  - alias: Lighting - Override Bathroom for bathtime_mode
    initial_state: on
    trigger:
      platform: state
      entity_id: switch.bathtime_mode
      to: 'on'
    action:
      - delay: '01:00:00'
      - service: homeassistant.turn_off
        entity_id: switch.bathtime_mode

  - alias: Lighting - Xmas lights off with main lights
    initial_state: on
    trigger:
      platform: state
      entity_id: light.livingroom
      to: 'off'
      from: 'on'
    action:
      service: homeassistant.turn_off
      entity_id: switch.xmas_lights


script:
  set_hue_scene:
    sequence:
      - service: hue.hue_activate_scene
        data_template:
          group_name: "{{ group }}"
          scene_name: "{{ scene }}"
