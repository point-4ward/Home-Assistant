############################################################
#                                                          #
# This package contains the automations that intelligently #
# control lighting based on weather/occupancy/time etc     #
#                                                          #
# DEPENDS ON: Occupancy and Environment                    #
#                                                          #
############################################################


homeassistant:
  customize:
    light.led1:
      icon: mdi:led-outline

    light.led2:
      icon: mdi:led-outline


light:
  platform: group
  name: Floor lights
  entities:
    - light.led1
    - light.led2


switch:
  - platform: command_line
    switches:
      bathroom_motion_status:
        command_on: !secret bathtime_command_on
        command_off: !secret bathtime_command_off
        command_state: !secret bathtime_command_state
        value_template: "{{ value_json.config.on }}"

      kitchen_motion_status:
        command_on: !secret kitchen_command_on
        command_off: !secret kitchen_command_off
        command_state: !secret kitchen_command_state
        value_template: "{{ value_json.config.on }}"

  - platform: template
    switches:
      bathtime_mode:
        icon_template: mdi:hot-tub
        value_template: "{{ is_state('switch.bathroom_motion_status' , 'off') }}"
        turn_on:
          - service: homeassistant.turn_off
            entity_id: switch.bathroom_motion_status
          - service: homeassistant.turn_on
            entity_id: light.bathroom
            data:
              brightness_pct: 100
        turn_off:
          - service: homeassistant.turn_on
            entity_id: switch.bathroom_motion_status
          - service: homeassistant.turn_off
            entity_id: light.bathroom
        

binary_sensor:
  platform: template
  sensors:
    floor_light_control:
      value_template: >
        {{ is_state('input_boolean.livingroom_light_smoother' , 'on')
          and is_state('input_boolean.dark' , 'on' )
          and is_state('input_boolean.movie_mode' , 'off') }}
          
input_boolean:
  livingroom_light_smoother:


input_select:
  bedroom_scenes:
    name: Scenes
    options:
      - Select
      - Arctic aurora
      - Bright
      - Concentrate
      - Dimmed
      - Energize
      - Nightlight
      - Read
      - Relax
      - Savanna sunset
      - Spring blossom
      - Tropical twilight
    initial: Select
    icon: mdi:creation


scene:
  - name: Livingroom dim
    entities:
      light.livingroom: &dim
        state: on
        transition: 4
        brightness: 125

  - name: Livingroom movie
    entities:
      light.livingroom:
        state: on
        transition: 4
        brightness: 35

  - name: Livingroom bright
    entities:
      light.livingroom: &bright
        state: on
        transition: 4
        brightness: 255

  - name: Livingroom sunset
    entities:
      light.livingroom:
        state: on
        transition: 600
        brightness: 255

  - name: Boys bright
    entities:
      light.boys: *bright

  - name: Boys dim
    entities:
      light.boys: *dim

  - name: Boys night
    entities:
      light.boys: &night
        state: on
        transition: 4
        brightness: 5

  - name: Girls bright
    entities:
      light.girls: *bright

  - name: Girls dim
    entities:
      light.girls: *dim

  - name: Girls night
    entities:
      light.girls: *night


automation:
  - alias: Lighting - off when daylight
    trigger:
      platform: state
      entity_id: input_boolean.dark
      to: 'off'
    condition:
      - condition: state
        entity_id: sensor.home_status
        state: 'Occupied'
      - condition: state
        entity_id: group.all_lights
        state: 'on'
    action:
      service: homeassistant.turn_off
      entity_id: group.all_lights

  - alias: Lighting - on when dark (already home)
    trigger:
      platform: state
      entity_id: input_boolean.dark
      to: 'on'
    condition:
      condition: state
      entity_id: sensor.home_status
      state: 'Occupied'
    action:
      service: homeassistant.turn_on
      entity_id: scene.livingroom_sunset

  - alias: Lighting - on when dark (arriving home)
    trigger:
      platform: state
      entity_id: sensor.home_status
      to: 'Occupied'
    condition:
      condition: state
      entity_id: input_boolean.dark
      state: 'on'
    action:
      service: homeassistant.turn_on
      entity_id: scene.livingroom_bright

  - alias: Lighting - Reset scene selector (Bedroom)
    trigger:
      platform: state
      entity_id: light.bedroom
      to: 'off'
    condition:
      condition: template
      value_template: "{{ not is_state('input_select.bedroom_scenes' , 'Select') }}"
    action:
      service: input_select.select_option
      data:
        entity_id: input_select.bedroom_scenes
        option: Select

  - alias: Lighting - Trigger scene (Bedroom)
    trigger:
      platform: state
      entity_id: input_select.bedroom_scenes
    condition:
      condition: template
      value_template: "{{ not is_state('input_select.bedroom_scenes' , 'Select') }}"
    action:
      service: script.set_hue_scene
      data_template:
        group: "Bedroom"
        scene: "{{ states('input_select.bedroom_scenes') }}"

  - alias: Lighting - Bedroom light 10 min daylight
    trigger:
      platform: state
      entity_id: light.bedroom
      to: 'on'
      for:
        minutes: 10
    condition:
      condition: state
      entity_id: input_boolean.dark
      state: 'off'
    action:
      service: homeassistant.turn_off
      entity_id: light.bedroom

  - alias: Lighting - Boys lights 10 min daylight
    trigger:
      platform: state
      entity_id: light.boys
      to: 'on'
      for:
        minutes: 10
    condition:
      condition: state
      entity_id: input_boolean.dark
      state: 'off'
    action:
      service: homeassistant.turn_off
      entity_id: light.boys

  - alias: Lighting - Girls lights 10 min daylight
    trigger:
      platform: state
      entity_id: light.girls
      to: 'on'
      for:
        minutes: 10
    condition:
      condition: state
      entity_id: input_boolean.dark
      state: 'off'
    action:
      service: homeassistant.turn_off
      entity_id: light.girls

  - alias: Lighting - Override Bathroom for bathtime_mode
    trigger:
      platform: state
      entity_id: switch.bathtime_mode
      to: 'on'
      for:
        hours: 1
    action:
      service: homeassistant.turn_off
      entity_id: switch.bathtime_mode

  - alias: Lighting - Supporting lights off with main lights
    trigger:
      platform: state
      entity_id: light.livingroom
      to: 'off'
      from: 'on'
    action:
      service: homeassistant.turn_off
      entity_id:
         - light.kitchen
         - switch.xmas_lights
         
  - alias: Lighting - Smooth Livingroom Lights (prevent 'unreachable' affecting Floor)
    trigger:
      - platform: state
        entity_id: light.livingroom
      - platform: homeassistant
        event: start
    condition:
      condition: or
      conditions:
        - condition: state
          entity_id: light.livingroom
          state: 'on'
        - condition: state
          entity_id: light.livingroom
          state: 'off'
    action:
      service_template: "homeassistant.turn_{{ states('light.livingroom') }}"
      entity_id: input_boolean.livingroom_light_smoother

  - alias: Lighting - Floor light control
    trigger:
      platform: state
      entity_id: binary_sensor.floor_light_control
    action:
      service_template: "homeassistant.turn_{{ states('binary_sensor.floor_light_control') }}"
      entity_id: light.floor_lights

  - alias: Lighting - Floor light colors
    trigger:
      platform: time_pattern
      seconds: '/30'
    condition:
      condition: state
      entity_id: light.floor_lights
      state: 'on'
    action:
      service: light.turn_on
      entity_id: light.floor_lights
      data_template:
        hs_color:
          - "{{ (15 + (state_attr('light.floor_lights' , 'hs_color')[0] or 0)) % 360 }}"
          - 100
        brightness_pct: 100

  - alias: Lighting - Movie mode timeout
    trigger:
      - platform: state
        entity_id: input_boolean.movie_mode
        to: 'on'
        for:
          hours: 4
      - platform: state
        entity_id: light.living_room
        to: 'off'
    action:
      service: homeassistant.turn_off
      entity_id: input_boolean.movie_mode


script:
  set_hue_scene:
    sequence:
      - service: hue.hue_activate_scene
        data_template:
          group_name: "{{ group }}"
          scene_name: "{{ scene }}"

  movie_mode_on:
    sequence:
      - service: homeassistant.turn_on
        entity_id: scene.livingroom_movie
      - service: homeassistant.turn_off
        entity_id:
          - switch.kitchen_motion_status
          - light.kitchen

  movie_mode_off:
    sequence:
      - service: homeassistant.turn_on
        entity_id: switch.kitchen_motion_status
      - condition: state
        entity_id: light.living_room
        state: 'on'
      - service: homeassistant.turn_on
        entity_id: scene.livingroom_dim
