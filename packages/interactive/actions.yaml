########################################################
#                                                      #
# This package contains automations that respond to    #
# interactive commands by actioning the request        #
#                                                      #
# DEPENDS ON: Notifications package                    #
#                                                      #
########################################################


homeassistant:
  customize:
    input_boolean.radio_downstairs:
      hidden: true
    
    input_boolean.radio_everywhere:
      hidden: true
    
    input_boolean.music:
      hiden: true


input_boolean:
  radio_downstairs:
    name: Radio downstairs
    initial: off
  
  radio_everywhere:
    name: Radio everywhere
    initial: off

  music_off:
    name: Music
    initial: on


automation:
  - alias: 'Alexa play radio'
    trigger:
      - platform: state
        entity_id: input_boolean.radio_downstairs
        to: 'on'
      - platform: state
        entity_id: input_boolean.radio_everywhere
        to: 'on'
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.radio_station
          option: Free Radio CW
      - service: input_select.select_option
        data_template:
          entity_id: input_select.media_player
          option: >-
            {% if is_state ('input_boolean.radio_downstairs' , 'on') %} downstairs_group
            {% elif is_state ('input_boolean.radio_everywhere' , 'on') %} everywhere_group
            {% endif %}
      - service: input_boolean.turn_on
        entity_id: input_boolean.play_radio
      - service: input_boolean.turn_off
        entity_id: input_boolean.radio_downstairs
      - service: input_boolean.turn_off
        entity_id: input_boolean.radio_everywhere

  - alias: 'Alexa music off'
    trigger:
      platform: state
      entity_id: input_boolean.music_off
      to: 'off'
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.music_off
      - service: input_boolean.turn_off
        entity_id: input_boolean.play_radio
      - service: switch.turn_off
        entity_id: switch.google_music

  - alias: 'Telegram set livingroom lights on'
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: '/LivingRoom'
    action:
      - service: homeassistant.toggle
        entity_id: light.living_room
      - service: telegram_bot.send_message
        data_template:
          target: '{{ trigger.event.data.user_id }}'
          message: 'Livingroom lights have been turned {{states.light.living_room.state}}.'

  - alias: 'Telegram set bedroom lights on'
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: '/Bedroom'
    action:
      - service: homeassistant.toggle
        entity_id: light.master_bedroom
      - service: telegram_bot.send_message
        data_template:
          target: '{{ trigger.event.data.user_id }}'
          message: 'Bedroom lights have been turned {{states.light.master_bedroom.state}}.'

  - alias: 'Telegram set all lights on'
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: '/onALL'
    action:
      - service: homeassistant.turn_on
        entity_id: group.all_lights
      - service: telegram_bot.send_message
        data_template:
          target: '{{ trigger.event.data.user_id }}'
          message: 'All lights have been turned on.'

  - alias: 'Telegram set all lights off'
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: '/offALL'
    action:
      - service: homeassistant.turn_off
        entity_id: group.all_lights
      - service: telegram_bot.send_message
        data_template:
          target: '{{ trigger.event.data.user_id }}'
          message: 'All lights have been turned off.'

  - alias: 'Telegram set maintenance mode'
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: '/maintenance'
    action:
      - service: input_boolean.toggle
        entity_id: input_boolean.maintenance_mode
      - service: telegram_bot.send_message
        data_template:
          target: '{{ trigger.event.data.user_id }}'
          message: 'Maintenance mode has been turned {{states.input_boolean.maintenance_mode.state}}.'

  - alias: 'Telegram set holiday mode'
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: '/holiday'
    action:
      - service: input_boolean.toggle
        entity_id: input_boolean.holiday_mode
      - service: telegram_bot.send_message
        data_template:
          target: '{{ trigger.event.data.user_id }}'
          message: 'Holiday mode has been turned {{states.input_boolean.holiday_mode.state}}'

  - alias: 'Telegram set guest mode'
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: '/guest'
    action:
      - service: input_boolean.toggle
        entity_id: input_boolean.guest_mode
      - service: telegram_bot.send_message
        data_template:
          target: '{{ trigger.event.data.user_id }}'
          message: 'Guest mode has been turned {{states.input_boolean.guest_mode.state}}.'

  - alias: 'Telegram set away mode'
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: '/away'
    action:
      - service: input_boolean.toggle
        entity_id: input_boolean.away_mode
      - service: telegram_bot.send_message
        data_template:
          target: '{{ trigger.event.data.user_id }}'
          message: 'Away mode has been turned {{states.input_boolean.away_mode.state}}'