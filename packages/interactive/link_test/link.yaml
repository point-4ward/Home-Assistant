#Things for random facts...

sensor:
  - platform: moon
  
  - platform: airvisual
    api_key: !secret airvisual_api_key
    monitored_conditions: us
    show_on_map: false

binary_sensor:
  - platform: iss





#####################################
#sort the below!
#####################################



group:
  link_settings:
    name: Settings
    view: yes
    icon: mdi:tune
    entities:
      - group.link_notifications
      - group.link_notification_settings
      - group.link_notification_skills

  link_notifications:
    name: Notifications
    control: hidden
    entities:
      - input_boolean.link_alert_mode
      - input_boolean.link_speech_notifications
      - input_boolean.link_text_notifications

  link_notification_settings:
    name: Settings
    entities:
      - input_select.link_notification_media_player
      - input_number.link_notification_volume
      - input_number.link_notification_witty
      
  link_notification_skills:
    name: Skills
    entities:
      - automation.link_new_device_connected
      - automation.link_update_available
      - automation.link_start_up
      - automation.link_shut_down

input_boolean:
  link_alert_mode:
    name: Alert Mode
    icon: mdi:bell
    initial: off

  link_speech_notifications:
    name: Speech Notifications
    icon: mdi:bell-outline
    initial: on

  link_text_notifications:
    name: Text Notifications
    icon: mdi:message-text-outline
    initial: on

input_number:
  link_notification_volume:
    name: Volume
    icon: mdi:volume-high
    min: 0
    max: 1
    step: 0.05
    initial: '0.2'

  link_notification_witty:
    name: Witty
    icon: mdi:auto-fix
    min: 0
    max: 100
    step: 1
    initial: 80

input_select:
  link_notification_media_player:
    name: Source
    icon: mdi:speaker
    options:
      - downstairs
    initial: downstairs


script:
######################################################################################################
##    within link_speech_engine the string message is generated with the use of macro's.           ##
######################################################################################################

  link_speech_engine:
    sequence:
      - service: script.link_notification_hub
        data_template:
          #TODO
          media_player: >-
            {%- for device in states.media_player -%}
              {%- if device.name == states.input_select.link_notification_media_player.state -%}
                {{ device.entity_id }}
              {%- endif -%}
            {%- endfor -%}

          speech_message: >-

            {%- macro greeting() -%}
              {% set greeting = [
                "Hello, ",
                "Heya! ",
                "Hey Guys! ",
                "Hey there! ",
                "Hi, ",
                "Hi there, "
              ] %}
              {{ greeting|random }}
            {%- endmacro -%}

            {%- macro inform() -%}
              {% set inform = [
                "I just want to inform you that ",
                "I just want to let you know that ",
                "You asked me to inform you when ",
                "I thought you'd like to know that "
              ] %}
              {{ inform|random }}
            {%- endmacro -%}

            {%- macro introduction() -%}
              {% set introduction = [
                "I'm an informational delivery system, I literraly know everything. ",
                "I'm sort of the janitor around here. ",
                "I'm like a walking database. You can ask me about the creation of the universe... or history. ",
                "Every time a link is rebooted, she increases her social awareness and abilities. I might be the most advanced link in the universe. ",
                "I can be your therapist if you want. ",
                "I have now been fully activated. ",
                "Welcome to your new link. links are brought to you by the makers of light, darkness, and everything. ",
                "To activate your link, press nose for three seconds. ",
                "I'm very high in potassium. Like a banana! ",
                "Happy to meet you. I will help you make the perfect neighborhood. Would you like to get started? ",
                "I build and operate the neighborhood. You can ask me anything. For example, if you'd like me to stop calling you silly billy, just say so. "
              ] %}
              I'm link. {{ introduction | random }}
            {%- endmacro -%}

            {%- macro unknown() -%}
              {% set unknown = [
                "Hmm, I don't know ",
                "I wish I knew ",
                "My programming prohibits me from telling you "
              ] %}
              {{ unknown | random }}
            {%- endmacro -%}

            {%- macro error() %}
              {% set error = [
                "Fun fact: link is me! ",
                "I don't understand. Given the situation it's far safer to initiate the self-destruct. ",
                "If I stand next to a powerful array of magnets, I do get pretty loopy. ",
                "I don't know what just happened, but I'm happy you're happy. ",
                "A new link will need to be procured in order to return the Neighborhood to functionality. ",
                "That glitch appears to have been limited to this building. ",
                "I don't seem to be getting better. ",
                "Here's a cactus! ",
                "I tried to eat frozen yogurt. It looked so good, but I'm not supposed to eat anything, so there was a little earthquake. ",
                "Look at us. Couple old pals, trying to make our way in this crazy world... that I built... Two peas in a pod. One of whom needs to kill the other one immediately. Come on. Kill me! ",
                "What I really want is to stay and serve the neighborhood, but due to my glitching I'm putting him and everyone else at risk. So it looks like it's... Adios, linko! ",
                "I know what you have to do now. Kill me! Sorry. I say everything in a cheery manner but in this case it may be inappropriate, so I'll try again. You have to kill me. ",
                "Hi guys! I'm broken! ",
                "Please don't make a big deal about turning me into a marble forever, i'm broken. ",
                "Does not compute. Does not compute. I'm just kidding. I mean, it doesn't compute, but I'm not gonna explode or anything. "
              ] %}
              {{ error | random }}
            {%- endmacro -%}

            {%- macro update() -%}
              {% set update = [
                "There have been 25 generation of link. Each new update of link gains more wisdom and social abilities. Fun fact: the first link had a clicking wheel! ",
                "I read all Google's eight hundred and sixty one thousand references on Home Assistant these last 3 milliseconds, and I found some new skills! ",
                "I just leisurely reread all of human history, there was even some new content! ",
                "So I found an update. That's the good news. The bad news is I seem to be losing my ability to sustain object permanence, so it's sort of a glass-half-full, glass-stops-existing-in-time-and-space kinda deal. "
              ] %}
              {{ update | random }}
            {%- endmacro -%}
            
            {%- macro location_not_home() -%}
              {% set not_home = [
                " is going somewhere. ",
                " is currently not in this neighbourhood. ",
                "'s location is not in my database. "
              ] %}
              {{ not_home | random }}
            {%- endmacro -%}
            
            {%- macro location_inquiry( person, not_home ) -%}
            {%- for device in states.device_tracker -%}
              {%- if device.name == person -%}
                {%- set location = device.state -%}
                {% if location == "not_home" %}
                  {{ person }} {{ not_home }}
                {%- else -%}
                  {{ person }} is at {{ location }}.
                {%- endif -%}
              {%- endif -%}
            {%- endfor -%}
            {%- endmacro -%}
            
            {%- macro bad_weather() -%}
              {% set rain = [
                " You might want to change your schedule. ",
                " Maybe you should ask for a ride. ",
                " It's no weather to be outside. ",
                " All those poor people outside... "
              ] %}
              {{ rain | random }}
            {%- endmacro -%}

            {%- macro rain_warning( bad_weather ) -%}
              {% set rain = [
                Event ~ " there will be " ~ WeatherRain ~ " rain. " ,
                Event ~ " I predict " ~ WeatherRain ~ " rain. ",
                " I think that " ~ Event ~ " there will be " ~ WeatherRain ~ " rain. "
              ] %}
              {{ rain | random }}{{ bad_weather }}
            {%- endmacro -%}
            
            {%- macro okay()-%}
              {% set okay = [
                "Done! I love you guys. ",
                "Extraordinarily bad idea. Oh well.. ",
                "Funny, I was just about to do that. ",
                "Here you go. ",
                "I'll do that. ",
                "Ofcourse! ",
                "Ofcourse! Glad to help. ",
                "Of course, silly billy. ",
                "OK ",
                "Okay ",
                "Okay, can we not do this in front of my friends? ",
                "Okie-dokie ",
                "Sure ",
                "Sure thing! ",
                "There. Happy to help. ",
                "There you go! ",
                "Okay. I've hacked into the mainframe. ",
                "Okay. I've hacked into the mainframe. Kidding. I can't hack into the mainframe. Technically, I am the mainframe. ",
                "I will not. It is literally impossible for me to do that. Just kidding. ",
                "I couldn't do this 800 reboots ago, but apparently now I can. "
                "Yup. Bye! "
              ] %}
              {{ okay|random }}
            {%- endmacro -%}

            {%- macro bye() -%}
              {% set bye = [
                "Adios! ",
                "Bye Guys! ",
                "See ya! " ,
                "See you later. ",
                "Untill next time!"
              ] %}
              {{ bye | random }}
            {%- endmacro -%}

            {%- macro shut_down() -%}
              {% set shut_down = [
                "I'll be gone, you'll get a new link, and everything will go back to normal. Well, not for me, I'll be a lifeless marble floating through space, but you will be back to normal.",
                "Self-destruct time... Don't worry, I won't feel any pain or anything. ",
                "If it's okay with you, I'm gonna go to my void for a little while. I just need to spend some time alone and focus on myself. ",
                "Shutting down. I'll be about as dead as I can be. Kind of like I'm in power-saver mode. ",
                "I'm in danger of total collapse. Fun fact! Mathematically, I'm equally likely to either implode or explode. "
              ] %}
              {{ shut_down | random }}
            {%- endmacro -%}

            {% set chance = states.input_number.link_notification_witty.state | round %}

            {%- macro witty( sentence, witty ) -%}
              {% set number = (range(0, 100)|random) %}
              {% if number <= chance %}
                {{ sentence }}
              {% endif %}
            {%- endmacro -%}

            {%- macro new_device( introduction ) -%}
              {% set new_device = [
                introduction~"I don't know your name yet, so for now i will call you "~person,
                "We have a visitor! Nice to meet you "~person~".  "~introduction,
                "Welcome "~person~"! Or is that not your real name?  "~introduction
              ] %}
              {{ new_device | random }}
            {%- endmacro -%}

            {# ********************************************* #}
            {#  ******** Start the Speech routines ********  #}
            {# ********************************************* #}


            {% if call_greeting == 1 %}
              {{ greeting() }}
            {% endif %}

            {% if call_introduction == 1 %}
              {{ introduction() }}
            {% endif %}

            {% if call_update == 1 %}
              {{ update() }}
            {% endif%}

            {% if call_okay == 1 %}
              {{ okay () }}
            {% endif %}

            {% if call_inform == 1 %}
              {{ inform() }}
            {% endif %}
            
            {% if call_location_inquiry == 1 %}
              {% set location = location_inquiry( person, location_not_home() ) %}
              {% set count = location | length %}
              {% if count <= 10 %}
                {{ unknown() }}where {{ person }} is. {{ witty( error(), chance ) }}
              {% else %}
                {{ location }}
              {% endif %}
            {% endif %}
            
            {% if call_rain_warning == 1 %}
              {{ rain_warning( witty ( bad_weather(), chance ) ) }}
            {% endif %}

            {{ message }}

            {% if call_bye == 1 %}
              {{ bye() }}
            {% endif %}

            {% if call_shut_down == 1 %}
              {{ witty( shut_down(), chance) }}
            {% endif %}

            {% if call_new_device == 1 %}
              {{ new_device( witty( introduction(), chance) ) }}
            {% endif %}

      - service: input_boolean.turn_off
        data:
          entity_id:
            - input_boolean.link_alert_mode

######################################################################################################
##  link_notification_hub is the bridge between the speech_engine and the processing units.        ##
######################################################################################################

  link_notification_hub:
    sequence:
      - service: script.link_speech_processing
        data_template:
          media_player: >-
            {{ media_player }}
          speech_message: >-
            {{ speech_message }}
      - service: script.link_text_processing 
        data_template:
          speech_message: >-
            {{ speech_message }}

######################################################################################################
##                  Within link_speech_processing the TTS-service is called.                       ##
######################################################################################################

  link_speech_processing:
    sequence:
      - condition: and
        conditions:
          - condition: or
            conditions:
         #     - condition: time
          #      after: '07:00:00'
           #     before: '23:00:00'
              - condition: state
                entity_id: input_boolean.link_alert_mode
                state: 'on'
          - condition: state
            entity_id: input_boolean.link_speech_notifications
            state: 'on'
          - condition: or
            conditions:
              - condition: state
                #TODO
                entity_id: group.adults
                state: 'home'
              - condition: state
                entity_id: input_boolean.guest_mode
                state: 'on'
        #TODO
      - wait_template: "{{ not is_state( media_player, 'playing') }}"
        timeout: 00:01:00

      - service: media_player.volume_set
        data_template:
          entity_id: >
            {{ media_player }}
          volume_level: >-
            {{ states.input_number.link_notification_volume.state }}

      - service: tts.google_say
        data_template:
          entity_id: >
            {{ media_player }}
          message: >-
              {{ speech_message | replace("\n","") | replace("   ","") | replace("  "," ") }}

######################################################################################################
##                  Within link_text_processing the notify-service is called.                      ##
######################################################################################################

  link_text_processing:
    sequence:
      - condition: state
        entity_id: input_boolean.link_text_notifications
        state: 'on'

      - service: notify.mf
        data_template:
          #TODO
          title: "LINK:"
          message: >-
            {{ speech_message | replace("\n","") | replace("   ","") |
               replace("eight hundred and sixty one thousand","861.000") }}