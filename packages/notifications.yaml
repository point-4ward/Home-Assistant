#################################################
#                                               #
# This package contains the components I use to #
# notify, and be notified by, homeassistant     #
#                                               #
#################################################


tts:
  platform: google
  cache: false

  
telegram_bot:
  - platform: polling
    api_key: !secret telegram_bot_api_key
    parse_mode: html
    allowed_chat_ids:
      - !secret telegram_bot_chat_id_mf
      - !secret telegram_bot_chat_id_ls
#      - !secret telegram_bot_chat_id_cg


notify:
  - platform: telegram
    name: mf
    chat_id: !secret telegram_bot_chat_id_mf

  - platform: telegram
    name: ls
    chat_id: !secret telegram_bot_chat_id_ls

  #- platform: telegram
  #  name: cg
  #  chat_id: !secret telegram_bot_chat_id_ccg

#script:
#  notify_engine:
#    sequence:
#    - service_template: >
#          {% if who == 'mf' %}
#            notify.mf
#          {% elif who == 'ls' %}
#            notify.ls
#          {% elif who == 'adults' %}
#            adults
#          {% else %}
#            all
#          {% endif %}
#          
#      data_template:
#        message: "{{ value1 }} {{ value2 }} {{ value3 }}"
#        data:
#          subtitle: "Home Assistant Notify"

# speech_engine:
  # sequence:
    # - condition: or
      # conditions:
        # - condition: state
          # entity_id: group.family
          # state: 'home'
        # - condition: state
          # entity_id: input_boolean.guest_mode
          # state: 'on'

    # - service: script.speech_processing
      # data_template:
        # media_player: >-
            # {% if media_player | length == 0 %}
              # {% set media_player = [
                # 'media_player.livingroomcc',
                # 'media_player.alarm_clock',
                # 'media_player.bedroom_alarm_panel'
              # ] %}
            # {% endif %}
            # {% if media_player is not string and media_player is sequence %}
              # {% set media_player = media_player|join(', ') %}
            # {% endif %}
            # {{ media_player }}
        # speech_message: >-
          # {%- macro dark_outside() -%}
            # {{ [
              # 'It is pretty dark outside. I will turn on the outside lights now.',
              # 'It is a little past Sunset. Time to turn on the outside lights. I am on it.',
              # 'I will switch on the outside lights. It is getting dark outside.',
              # 'Time to turn on the front lights. I will take care of it.'
            # ]|random }}
          # {%- endmacro -%}
          # {%- macro responsibilities() -%}
            # {% if now().strftime('%a') == 'Wed' or now().strftime('%a') == 'Sun' %}
              # Today is {{ now().strftime('%A') }} and {{ now().strftime('%A') }} is garbage day.
            # {% endif %}
            # {% if now().strftime('%a') == 'Wed' %}
              # Both Recycling and regular Garbage goes out. Please take out all of the garbage cans tonight.
            # {% endif %}
            # {% if now().strftime('%j')|int % 2 != 0 %}
              # Today is Justin's day to do the chores.
            # {% else %}
              # Today is Paige's day to do the chores.
            # {% endif %}
          # {%- endmacro -%}
          # {%- macro inside_weather() -%}
            # Inside the house, it is {{ states.climate.downstairs.attributes['current_temperature'] }} degrees with around {{ states('sensor.downstairs_thermostat_humidity') }} percent humidity.
          # {%- endmacro -%}
          # {%- macro outside_weather() -%}
            # Outside, it is going to be {{ states('sensor.dark_sky_minutely_summary') }}
          # {%- endmacro -%}
          # {%- macro light_check() -%}
            # {% if states.group.all_lights.state != 'off' -%}
              # There are
            # {% for state in states.light if state.state == 'on' -%}
              # {%- if loop.last -%}
                # {{ loop.index }}
              # {%- endif -%}
            # {%- endfor %}
            # lights on right now.
            # {% set comma = joiner(', ') %}
            # The
            # {% for group in states.group|groupby('state') -%}
              # {%- for entity in group.list if entity.state == 'on' and entity.name.split(' ')[1]|lower == 'lights' and entity.name.split(' ')[0]|lower != 'all' and entity.name.split(' ')[0]|lower != 'interior' -%}
                # {{ ' and' if loop.last and not loop.first else comma() }}
                # {{ entity.name }}
              # {%- endfor -%}
            # {%- endfor -%}
            # .
            # {%- endif -%}
          # {%- endmacro -%}
          # {%- macro window_check() -%}
            # {% if states.group.entry_points.state != 'off' -%}
              # {% set comma = joiner(', ') %}
              # The
              # {% for state in states.binary_sensor if state.state == 'on' and state.attributes.device_class == 'opening' -%}
              # {%- endfor %}
              # {% for group in states.binary_sensor|groupby('state') -%}
                # {%- for entity in group.list  if entity.state == 'on' and entity.attributes.device_class == 'opening'  -%}
                  # {{ ' and' if loop.last and not loop.first else comma() }}
                  # {{ entity.attributes.friendly_name }}
                # {%- endfor -%}
              # {% endfor %}
               # need to be closed.
            # {%- endif -%}
          # {%- endmacro -%}
          # {%- macro garage_check() -%}
            # {% if states.group.garage_doors.state !='closed' -%}
              # The
              # {%- for state in states.cover -%}
              # {%- endfor %}
              # {% for group in states.cover|groupby('state') -%}
                # {%- for entity in group.list  if entity.state == 'open' and entity.attributes.device_class == 'garage'  -%}
                  # {{ ' and' if loop.last and not loop.first }}
                  # {{ entity.attributes.friendly_name }}
                # {%- endfor -%}
              # {%- endfor %}
              # need to be closed.
            # {%- endif -%}
          # {%- endmacro -%}
          # {%- macro medicine() -%}
            # {% if is_state('input_boolean.medicine', 'off') -%}
              # It looks like Carlo has not taken his medicine yet. Please make sure Carlo takes his medicine now.
            # {% endif -%}
          # {%- endmacro -%}
          # {%- macro iss() -%}
            # {% if is_state('binary_sensor.iss', 'on') -%}
              # Here is something interesting. The international space station is above us now. There are {{ states.binary_sensor.iss.attributes['number_of_people_in_space'] }} people in space right now.
              # {{ outside_weather() }}
            # {% endif -%}
          # {%- endmacro -%}
          # {%- macro pihole() -%}
            # {% if states.sensor.pihole_ads_blocked_today.state|int > 10000 -%}
              # We blocked {{ states.sensor.pihole_ads_blocked_today.state }} ads. That is {{ states.sensor.pihole_ads_percentage_blocked_today.state }}% of our internet traffic.
            # {% endif -%}
          # {%- endmacro -%}
          # {%- macro moon() -%}
            # {%- if states.sensor.moon.state == 'Full moon' -%}
              # Check out the full moon tonight!
            # {%- endif -%}
          # {%- endmacro -%}
          # {%- macro holiday() -%}
            # {% if states.sensor.holiday.state != '' %}
              # Today is {{ states.sensor.holiday.state }}.
            # {% endif %}
          # {%- endmacro -%}
          # {# ********************************************* #}
          # {#  ******** Start the Speech routines ********  #}
          # {# ********************************************* #}
          # {% if call_no_announcement != 1 %}
            # {% if now().strftime('%H')|int < 12 and now().strftime('%H')|int > 6 %}
              # Good morning.
            # {% elif now().strftime('%H')|int >= 12 and now().strftime('%H')|int < 17 %}
              # Good afternoon.
            # {% else %}
              # Good evening.
            # {% endif %}
          # {% endif %}
          # {# Called from Annoucenments #}
          # {{ personarriving }}
          # {# Called from Nest when thermostats turn on #}
          # {{ NestStatus }}
          # {% if call_inside_weather == 1 %}
            # {{ inside_weather() }}
          # {% endif %}
          # {% if call_outside_weather == 1 and is_state('sun.sun', 'above_horizon') %}
            # {{ outside_weather() }}
          # {% endif %}
          # {{ DoorOpened }}
          # {{ DoorClosed }}
          # {% if call_dark_outside == 1 %}
            # {{ dark_outside() }}
          # {% endif %}
          # {% if call_garage_check == 1 or is_state('sun.sun', 'below_horizon') %}
            # {{ garage_check() }}
          # {% endif %}
          # {% if (call_window_check == 1 or is_state('sun.sun', 'below_horizon')) or is_state('group.entry_points', 'on') %}
            # {{ window_check() }}
          # {% endif %}
          # {{ NewDevice }}
          # {% if call_light_check == 1 %}
            # {{ light_check() }}
          # {% endif %}
          # {% if call_responsibilities == 1 %}
            # {{ responsibilities() }}
          # {% endif %}
          # {% if now().strftime('%H')|int > 21 %}
            # {{ medicine() }}
          # {% endif %}
          # {% if value1 is not none %}
            # {{ value1 }}
          # {% endif %}
          # {# call a Random fact about the house #}
          # {{ ([iss, pihole, moon]|random)() }}
          # {{ holiday() }}
    # - service: input_boolean.turn_off
      # data:
        # entity_id:
          # - input_boolean.home_stats
          # - input_boolean.responsibilities


# speech_processing:
  # sequence:
    # - service: mqtt.publish
      # data_template:
        # topic: 'polly/lastmsg'
        # payload: "This message is from {{ now().strftime('%-I') }}:{{ now().strftime('%M') }} {{ now().strftime('%p') }}. {{ speech_message }}"
        # retain: true

    # - condition: and
      # conditions:
        # - condition: or
          # conditions:
            # - condition: state
              # entity_id: group.family
              # state: 'home'
            # - condition: state
              # entity_id: input_boolean.guest_mode
              # state: 'on'
        # - condition: or
          # conditions:
            # - condition: and
              # conditions:
                # - condition: state
                  # entity_id: group.bed
                  # state: 'off'
                # - condition: time
                  # after: '08:00:00'
                  # before: '20:00:00'
            # - condition: state
              # entity_id: input_boolean.alert_mode
              # state: 'on'
        # - condition: state
          # entity_id: input_boolean.speech_notifications
          # state: 'on'

    # - service: switch.turn_on
      # data:
        # entity_id: switch.living_room_amp

    # - service: media_player.volume_set
      # data_template:
        # entity_id: >
          # {{ media_player }}
        # volume_level: >-
          # {% if now().strftime('%H')|int < 12 and now().strftime('%H')|int > 6 %}
            # 0.3
          # {% elif now().strftime('%H')|int > 12 and now().strftime('%H')|int < 20 %}
            # 0.5
          # {% else %}
            # 0.3
          # {% endif %}
    # - service: tts.amazon_polly_say
      # data_template:
        # entity_id: >
          # {{ media_player }}
        # message: >-
          # <speak>
            # {{ speech_message }}
          # </speak>
        # cache: true

    # - service: input_boolean.turn_off
      # data:
        # entity_id:
          # - input_boolean.alert_mode
          # - input_boolean.lastmsg