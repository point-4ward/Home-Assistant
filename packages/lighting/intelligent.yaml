############################################################
#                                                          #
# This package contains the automations that intelligently #
# control lighting based on weather/occupancy/time etc     #
#                                                          #
# DEPENDS ON: Occupancy and Environmental_sensors          #
#                                                          #
############################################################


automation:
  - alias: 'Lights off when daylight'
    trigger:
      platform: state
      entity_id: sensor.dark_outside
      to: 'false'
    condition:
      condition: state
      entity_id: sensor.home_status
      state: 'Occupied'
    action:
      service: homeassistant.turn_off
      entity_id: group.all_lights

  - alias: 'Lights on when dark - already home'
    trigger:
      platform: state
      entity_id: sensor.dark_outside
      to: 'true'
    condition:
      condition: state
      entity_id: sensor.home_status
      state: 'Occupied'
    action:
      - service: scene.turn_on
        entity_id: scene.livingroom_sunset
      - service: script.landing_light_scene

  - alias: 'Lights on when dark - arriving home'
    trigger:
      platform: state
      entity_id: sensor.home_status
      to: 'Occupied'
    condition:
      condition: state
      entity_id: sensor.dark_outside
      state: 'true'
    action:
      - service: scene.turn_on
        entity_id: scene.livingroom_bright
      - service: script.landing_light_scene

  - alias: 'Landing light night mode'
    trigger:
      platform: time
      at: '21:30:00'
    condition:
      condition: state
      entity_id: light.landing
      state: 'on'
    action:
      service: scene.turn_on
      entity_id: scene.landing_night

  - alias: bedtime lights
    trigger:
      platform: state
      entity_id: sensor.living_room_switch
      to: '4_hold'
    action:
      service: script.set_hue_scene
      data_template:
        group: "Master Bedroom"
        scene: "Relax"

  - alias: 'Media player playing (lights)'
    trigger:
      platform: state
      entity_id: media_player.living_room_kodi
      to: 'playing'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: sensor.dark_outside
          state: 'true'
        - condition: or
          conditions:
          - condition: template
            value_template: '{{ states.media_player.living_room_kodi.attributes.media_content_type == "tvshow" }}'
          - condition: template
            value_template: '{{ states.media_player.living_room_kodi.attributes.media_content_type == "movie" }}'
    action:
      service: scene.turn_on
      entity_id: scene.livingroom_movie

  - alias: 'Media player stopped (lights)'
    trigger:
      platform: state
      entity_id: media_player.living_room_kodi
      to: 'idle'
    condition:    
      condition: state
      entity_id: sensor.dark_outside
      state: 'true'
    action:
      service: scene.turn_on
      entity_id: scene.livingroom_bright

  - alias: 'Media player paused (lights)'
    trigger:
      platform: state
      entity_id: media_player.living_room_kodi
      to: 'paused'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: sensor.dark_outside
          state: 'true'
        - condition: or
          conditions:
          - condition: template
            value_template: '{{ states.media_player.living_room_kodi.attributes.media_content_type == "tvshow" }}'
          - condition: template
            value_template: '{{ states.media_player.living_room_kodi.attributes.media_content_type == "movie" }}'
    action:
      service: scene.turn_on
      entity_id: scene.livingroom_bright


script:
  landing_light_scene:
    sequence:
      - service: scene.turn_on
        entity_id: scene.landing_evening
      - condition: or
        conditions:
          - condition: time
            after: '21:30:00'
          - condition: time
            before: '07:30:00'
      - service: scene.turn_on
        entity_id: scene.landing_night
