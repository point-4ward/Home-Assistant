############################################################
#                                                          #
# This package contains the automations that intelligently #
# control lighting based on weather/occupancy/time etc     #
#                                                          #
# DEPENDS ON: Occupancy and Environment                    #
#                                                          #
############################################################


automation:
  - alias: Lighting - off when daylight
    initial_state: on
    trigger:
      platform: state
      entity_id: sensor.dark_outside
      to: 'false'
    condition:
      condition: state
      entity_id: sensor.home_status
      state: 'Occupied'
    action:
      - service: script.notify
        data:
          call_light_outside: 1
      - service: homeassistant.turn_off
        entity_id: group.all_lights

  - alias: Lighting - on when dark (already home)
    initial_state: on
    trigger:
      platform: state
      entity_id: sensor.dark_outside
      to: 'true'
    condition:
      condition: state
      entity_id: sensor.home_status
      state: 'Occupied'
    action:
      - service: script.notify
        data:
          call_dark_outside: 1
      - service: homeassistant.turn_on
        entity_id: scene.livingroom_sunset
      - service: script.landing_light_scene

  - alias: Lighting - on when dark (arriving home)
    initial_state: on
    trigger:
      platform: state
      entity_id: sensor.home_status
      to: 'Occupied'
    condition:
      condition: state
      entity_id: sensor.dark_outside
      state: 'true'
    action:
      - service: homeassistant.turn_on
        entity_id: scene.livingroom_bright
      - service: script.landing_light_scene

  - alias: Lighting - Landing light
    initial_state: on
    trigger:
      - platform: time
        at: '21:31:00'
      - platform: time
        at: '07:31:00'
    condition:
      condition: state
      entity_id: light.landing
      state: 'on'
    action:
      service: script.landing_light_scene

  - alias: Lighting - Kitchen motion
    initial_state: on
    trigger:
      platform: state
      entity_id: sensor.kitchen_motion_sensor_burglar
    action:
      service_template: >
        {% if is_state('sensor.kitchen_motion_sensor_burglar','8')
          and is_state('input_boolean.bedtime_mode','off') %} homeassistant.turn_on
        {% else %} homeassistant.turn_off {% endif %}
      entity_id: light.kitchen

  - alias: Lighting - Kodi
    initial_state: on
    trigger:
      - platform: state
        entity_id: media_player.kodi
        to: 'playing'
      - platform: state
        entity_id: media_player.kodi
        to: 'paused'
      - platform: state
        entity_id: media_player.kodi
        to: 'idle'
        from: 'playing'
    condition:
      - condition: state
        entity_id: sensor.dark_outside
        state: 'true'
      - condition: or
        conditions:
          - condition: template
            value_template: "{{ is_state_attr('media_player.kodi' , 'media_content_type' , 'tvshow') }}"
          - condition: template
            value_template: "{{ is_state_attr('media_player.kodi' , 'media_content_type' , 'movie') }}"
          - condition: state
            entity_id: media_player.kodi
            state: 'idle'
    action:
      service: homeassistant.turn_on
      data_template:
        entity_id: >
          {% if is_state ('media_player.kodi' , 'playing') %} scene.livingroom_movie
          {% else %} scene.livingroom_dim {% endif %}
