#####################################################
#                                                   #
# This package contains the components and sensors  #
# I use to monitor environmental factors            #
#                                                   #
#####################################################


google:
  client_id: !secret google_calendar_client_id
  client_secret: !secret google_calendar_secret


sun:


zone:
  - name: Chace
    latitude: !secret chace_lat
    longitude: !secret chace_long

  - name: CV Central
    latitude: !secret cv_central_lat
    longitude: !secret cv_central_long

  - name: Wiseman
    latitude: !secret wiseman_lat
    longitude: !secret wiseman_long


input_boolean:
  dark:


sensor:
  - platform: time_date
    display_options:
      - 'time'
      - 'date'

  - platform: darksky
    api_key: !secret darksky_api_key
    units: auto
    update_interval:
      minutes: 60
    monitored_conditions:
      - summary
      - minutely_summary
      - precip_type
      - precip_intensity
      - precip_probability
      - apparent_temperature
      - temperature_low
      - dew_point
      - wind_speed
      - cloud_cover
      - humidity
      - uv_index

  - platform: moon

  - platform: airvisual
    api_key: !secret airvisual_api_key
    monitored_conditions: us
    show_on_map: false

  - platform: template
    sensors:
      calendar:
        value_template: !secret google_calendar_sensor

      bad_weather:
        value_template: >
          {% if is_state('sensor.dark_sky_precip' , 'snow') %} snow
          {% elif ((states('sensor.dark_sky_daily_low_temperature')|int < 4) and (states('sensor.dark_sky_dew_point')|int < 6)
            and (states('sensor.dark_sky_wind_speed')|int < 12) and (states('sensor.dark_sky_cloud_coverage')|int < 20)
            and (states('sensor.dark_sky_humidity')|int > 50)) %} frost
          {% elif (states('sensor.dark_sky_precip_intensity')|int > 7) %} heavy_rain
          {% else %} clear {% endif %}

      bathroom_temperature:
        value_template: "{{ state_attr('sensor.bathroom_motion_motion' , 'temperature') }}"
        unit_of_measurement: °C

      bathroom_light_level:
        value_template: "{{ state_attr('sensor.bathroom_motion_motion' , 'lux') }}"
        unit_of_measurement: lux

      attic_temperature:
        value_template: "{{ state_attr('sensor.stairs_motion_motion' , 'temperature') }}"
        unit_of_measurement: °C

      attic_light_level:
        value_template: "{{ state_attr('sensor.stairs_motion_motion' , 'lux') }}"
        unit_of_measurement: lux

      landing_temperature:
        value_template: "{{ state_attr('sensor.landing_motion_motion' , 'temperature') }}"
        unit_of_measurement: °C

      landing_light_level:
        value_template: "{{ state_attr('sensor.landing_motion_motion' , 'lux') }}"
        unit_of_measurement: lux

      hall_temperature:
        value_template: "{{ state_attr('sensor.hall_motion_motion' , 'temperature') }}"
        unit_of_measurement: °C

      hall_light_level:
        value_template: "{{ state_attr('sensor.hall_motion_motion' , 'lux') }}"
        unit_of_measurement: lux

      average_temperature:
        value_template: >
          {{ (((states('sensor.bathroom_temperature')|float) + (states('sensor.attic_temperature')|float)
            + (states('sensor.landing_temperature')|float) + (states('sensor.hall_temperature')|float)
            + (states('sensor.kitchen_motion_sensor_temperature')|float)) /4)|round(2) }}
        unit_of_measurement: °C

      average_light_level:
        value_template: >
          {{ (((states('sensor.bathroom_light_level')|float) + (states('sensor.landing_light_level')|float)
            + (states('sensor.kitchen_motion_sensor_luminance')|float)) /3)|round(2) }}
        unit_of_measurement: lux


binary_sensor:
  platform: iss

automation:
  alias: Environment - Darkness monitor
  initial_state: on
  trigger:
    - platform: numeric_state
      entity_id: sensor.average_light_level
      below: 20
    - platform: numeric_state
      entity_id: sensor.average_light_level
      above: 40
  action:
    service_template: >
      {% if states('sensor.average_light_level')|int < 21 %} homeassistant.turn_on
      {% else %} homeassistant.turn_off {% endif %}
    entity_id: input_boolean.dark
