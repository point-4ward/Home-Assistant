#####################################################
#                                                   #
# This package contains the components and sensors  #
# I use to monitor the environmental factors        #
# where I live, and automations I use to fine tune  #
#                                                   #
#####################################################

google:
  client_id: !secret google_calendar_client_id
  client_secret: !secret google_calendar_secret


sun:


zone:
  name: Whitnash
  latitude: !secret whitnash_lat
  longitude: !secret whitnash_long


input_boolean:
  sunset_offset:


sensor:
  - platform: time_date
    display_options:
      - 'time'
      - 'date'

  - platform: google_travel_time
    name: Travel to Whitnash
    api_key: !secret google_map_api_key
    origin: zone.home
    destination: zone.whitnash
    options:
      units: imperial

  - platform: darksky
    api_key: !secret darksky_api_key
    units: auto
    update_interval:
      minutes: 60
    monitored_conditions:
      - summary
      - minutely_summary
      - precip_type
      - precip_intensity
      - precip_probability
      - apparent_temperature
      - temperature_min
      - dew_point
      - wind_speed
      - cloud_cover
      - humidity
      - uv_index

  - platform: moon

  - platform: airvisual
    api_key: !secret airvisual_api_key
    monitored_conditions: us
    show_on_map: false

  - platform: template
    sensors:
      calendar:
        value_template: !secret google_calendar_sensor

      dark_outside:
        value_template: >
          {% if (states.input_boolean.sunset_offset.state == 'on') %}true
          {% elif (states.sun.sun.attributes.elevation | int < 3) %}true
          {% elif ( (states.sun.sun.attributes.elevation | int < 4.5) and (states.sensor.dark_sky_cloud_coverage.state | int > 80)) %}true
          {% elif ( (states.sun.sun.attributes.elevation | int < 6.5) and (states.sensor.dark_sky_cloud_coverage.state | int > 85)) %}true
          {% elif (states.sensor.dark_sky_cloud_coverage.state | int > 90) %}true
          {% else %} false {% endif %}

      bad_weather:
        value_template: >
          {% if (states.sensor.dark_sky_precip.state == "snow") %}snow
          {% elif ((states.sensor.dark_sky_daily_low_temperature.state | int < 4) and (states.sensor.dark_sky_dew_point.state | int < 6)
            and (states.sensor.dark_sky_wind_speed.state | int < 12) and (states.sensor.dark_sky_cloud_coverage.state | int < 20)
            and (states.sensor.dark_sky_humidity.state | int > 50)) %} frost
          {% elif (states.sensor.dark_sky_precip_intensity | int > 7) %} heavy_rain
          {% else %} clear {% endif %}


binary_sensor:
  - platform: iss


automation:
  alias: Environment - Dusk monitor
  initial_state: 'on'
  trigger:
    - platform: sun
      event: sunrise
      offset: '+00:35:00'
    - platform: sun
      event: sunset
      offset: '-00:35:00'
  action:
    entity_id: input_boolean.sunset_offset
    service_template: >
      {% if (now().hour < 12) %} input_boolean.turn_off
      {% else %} input_boolean.turn_on {% endif %}
