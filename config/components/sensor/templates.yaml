##################################################
#Creating sensors that I can use to convert      #
#readings from other services and create a       #
# 'state' that can triggger/condtion automations #
##################################################

- platform: template
  sensors:
    calendar:
      value_template: >
        {{ strptime(states.calendar.marcforthrungmailcom.attributes.start_time, "%Y-%m-%d %H:%M:%S").strftime("%A %B %d at %H:%M") }}:
        {{ states.calendar.marcforthrungmailcom.attributes.message }}
      friendly_name: 'Next Event'
    
    home_status:
      friendly_name: 'Home status'
      value_template: >
        {% if (states.group.all_devices.state == 'home') or (states.input_boolean.guest_mode.state == 'on') %}Occupied
        {% else %} Unoccupied
        {% endif %}
      
    dark_outside:
      friendly_name: 'Dark outside'
      value_template: >
        {% if (states.input_boolean.sunset_offset.state == 'on') %}true
        {% elif (states.sun.sun.attributes.elevation | int < 3) %}true
        {% elif ( (states.sun.sun.attributes.elevation | int < 4.5) and (states.sensor.dark_sky_cloud_coverage.state | int > 80)) %}true
        {% elif ( (states.sun.sun.attributes.elevation | int < 6.5) and (states.sensor.dark_sky_cloud_coverage.state | int > 85)) %}true
        {% elif (states.sensor.dark_sky_cloud_coverage.state | int > 90) %}true
        {% else %}false
        {% endif %}

    bad_weather:
      friendly_name: 'Bad weather'
      value_template: >
        {% if (states.sensor.dark_sky_precip.state == "snow") %}snow
        {% elif ((states.sensor.dark_sky_daily_low_temperature.state | int < 4) and (states.sensor.dark_sky_dew_point.state | int < 6) and (states.sensor.dark_sky_wind_speed.state | int < 12) and (states.sensor.dark_sky_cloud_coverage.state | int < 20) and (states.sensor.dark_sky_humidity.state | int > 50)) %} frost
        {% elif (states.sensor.dark_sky_precip_intensity | int > 7) %} heavy_rain
        {% else %} clear
        {% endif %}
